package db_test

import (
    "testing"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/mock"
    "github.com/google/uuid"
    "yourproject/model"
    "yourproject/db"
)

// Mock dependencies if needed
type MockDb struct {
    mock.Mock
}

func (m *MockDb) getGorm() *gorm.DB {
    args := m.Called()
    return args.Get(0).(*gorm.DB)
}

func TestGetMetricGraphMultiLine(t *testing.T) {
    // Initialize the repository
    repository := db.MetricGraphMultiLineRepositoryDb{}

    // Call the function
    result, err := repository.GetMetricGraphMultiLine()

    // Assertions
    assert.NoError(t, err)
    assert.NotNil(t, result)

    // Verify the structure of the result
    assert.Equal(t, "multiline", result.Type)
    assert.Equal(t, "Title", result.Title)

    // Verify the values
    values := result.Values
    assert.Equal(t, "mm", values.Unit)
    assert.Equal(t, 30, values.ReloadTime)
    assert.Equal(t, "5m", values.DefaultInterval)
    assert.NotEmpty(t, values.TimeStamp)
    assert.NotEmpty(t, values.Intervals)
    assert.NotEmpty(t, values.X)
    assert.NotEmpty(t, values.Y)
    assert.Equal(t, 7, values.Request)
}